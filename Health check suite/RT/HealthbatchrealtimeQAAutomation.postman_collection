{
	"info": {
		"_postman_id": "6570c83e-ade1-45ee-8b73-777743531080",
		"name": "Health batch real time QA Automation",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Search Find Contacts filter",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "9cce51a6-3e24-48f8-bc8e-3cdc57f38a4f",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"pm.test(\"JSON Checking for structure\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.requestId).to.not.be.null;",
							"    let nodes = jsonData.results.nodes;",
							"    ",
							"    var counterEntities = 0;",
							"    for (var key in nodes) {",
							"        if (nodes.hasOwnProperty(key)) {",
							"            if (nodes[key].items.type && nodes[key].items.nodeID){",
							"                pm.expect(nodes[key].items).to.not.be.null;",
							"            }else{",
							"                console.log(\"missing data\", nodes[key].items.type, nodes[key].items.nodeID);",
							"            }",
							"        }   ",
							"    }",
							"    console.log(nodes.length, \"people records in the list\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"warning": "This is a duplicate header and will be overridden by the Content-Type header generated by Postman."
					},
					{
						"key": "x-api-key",
						"type": "text",
						"value": "{{API_KEY}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n   \"filter\": \"{isIn(person.currentCompany.listId, '{{comp_list}}')}\"\n}"
				},
				"url": {
					"raw": "{{API_URL}}/search",
					"host": [
						"{{API_URL}}"
					],
					"path": [
						"search"
					]
				}
			},
			"response": []
		},
		{
			"name": "action - Count Entities",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "d823a02d-a311-4771-a8ec-c0415c9c88d1",
						"exec": [
							"var CEfilters = pm.environment.get(\"CEfilters\");",
							"if (!CEfilters) {",
							"   CEfilters = [\"{ range(company.size, 0, 5) }\", \"{ has(company.industry) }\", \"{ isIn(company.country, 'United States') }\"];",
							"}",
							"console.log(\"CEprfil\",CEfilters);",
							"var CEcurrentFilter = CEfilters.shift();",
							"pm.environment.set('CEfilter', CEcurrentFilter);",
							"pm.environment.set('CEfilters', CEfilters);",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "1276b03d-9898-457b-bd2b-087df5f113d7",
						"exec": [
							"pm.test(\"JSON Checking for structure\", function () {",
							"    var jsonData = pm.response.json();",
							"    var counter = pm.globals.get(\"counter\");",
							"    console.log(counter);",
							"",
							"    var CEfilter = pm.environment.get(\"CEfilter\");",
							"    console.log(\"CEfilter\",CEfilter);",
							"    if (CEfilter && CEfilter.length > 0) {",
							"    pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"    let ceJobID = jsonData.totalCount;",
							"    pm.environment.set(\"CEJOBID\" + counter, ceJobID);",
							"    let CEJOBID= pm.environment.get(\"CEJOBID\" + counter);",
							"    console.log(CEJOBID);",
							"    postman.setNextRequest(\"action - Count Entities\");",
							"    console.log(\"COUNTER: \" + counter++);",
							"    pm.globals.set(\"counter\", counter++);",
							"   ",
							"} else {",
							"    pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"   ",
							"}",
							"   ",
							"    ",
							"",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"warning": "This is a duplicate header and will be overridden by the Content-Type header generated by Postman."
					},
					{
						"key": "x-api-key",
						"type": "text",
						"value": "{{API_KEY}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"filter\": \"{{CEfilter}}\"\n}\n"
				},
				"url": {
					"raw": "{{API_URL}}/countEntities",
					"host": [
						"{{API_URL}}"
					],
					"path": [
						"countEntities"
					]
				}
			},
			"response": []
		},
		{
			"name": "action - Distribution",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "9cce51a6-3e24-48f8-bc8e-3cdc57f38a4f",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"JSON Checking for structure\", function () {",
							"    var jsonData = pm.response.json();",
							"         let responselist = jsonData.distribution;",
							"    let Data = jsonData.distribution.State.Florida;",
							"   ",
							"",
							"});",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "df407e68-f606-4881-9811-56c28eef6321",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json",
						"warning": "This is a duplicate header and will be overridden by the Content-Type header generated by Postman."
					},
					{
						"key": "x-api-key",
						"type": "text",
						"value": "{{API_KEY}}"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"listId\": \"{{GPEXPRecognizeID}}\"\n}\n"
				},
				"url": {
					"raw": "{{API_URL}}/distribution",
					"host": [
						"{{API_URL}}"
					],
					"path": [
						"distribution"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "7322b7d8-73c4-409f-a2b9-d3b012bf88ec",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "c0347a81-1be8-4d03-9c2f-4ecaf7bbf790",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "91533a10-d325-401c-883d-f0cc04cd4f5b",
			"key": "API_URL",
			"value": "https://es29twi3ed.execute-api.us-west-2.amazonaws.com/qa01",
			"type": "string"
		},
		{
			"id": "8085ae92-2206-4248-8af2-fb1ce6aa92ff",
			"key": "API_KEY",
			"value": "0N1nWzh0s5DWfoPRzMCP84B680Dpw0b36Yxm1fB0",
			"type": "string"
		}
	],
	"protocolProfileBehavior": {}
}